\subsection{OCR system construction and system testing}
För att separera klasserna från varandra gjordes 1vAll-test. Alltså en bokstav klassifieras genom att titta A v inteA, B v inteB, C v inteC osv. Därefter klassifieras den som den första bokstaven som matchar (alltså om c och o båda matchar så klassifieras den som c). Ibland matchade ingen bokstav. Jag tänkte att detta berodde på dåliga features/segmentation så därför valde jag att klassifiera som ett A i dessa fall. Tanken är att helt enkelt förbättra OCR-systemet så att man aldrig hamnar där.
För att träna datasettet användes ocrsegments. Datasettet testades sedan på short1 och home1. Först när detta gjordes förekom det på short1 att min classifyer inte lyckades hitta någon vettig klassifierings-kandidadat (och klassifiera som ett A). Detta var så klart ännu vanligare vid datasettet home1. Hitrate för short1 var \textbf{0.85} och home1 var \textbf{0.66}.

Därefter ändrade jag min segment2features. Jag hade hört någon nämna att bra features helt enkelt var att göra bokstaven i låg upplösning och använda detta som en feature-vektor. Jag använde därför funktionen imresize och gjorde om bilderna till 7x7-upplösning. Detta gjorde att hitrate för short1 var \textbf{1} och för home1 var den \textbf{0.88} (då 6x6 pixlar användes) och \textbf{0.922} då 7x7 pixlar användes. 
